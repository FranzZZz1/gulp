/* ------- MAIN ------- */

$self: &;

/* -------------------- */

/* ---------- COLORS  ---------- */

$accent: #fff;
$secondary: #000;

/* ----------------------------- */

/* ---------- SIZES ---------- */

$index: calc(1vw + 1vh);
$size: 0px; // 4-8-12-16-20...
$header-size: 100px;

/* --------------------------- */

/* ----- Z-INDEX ----- */

$ui-index-1: 1; // для наползающих элементов в общем потоке
$ui-index-2: 2; // для наползающих элементов в общем потоке
$ui-index-3: 3; // для масок(затемнение, блюр)
$ui-index-4: 4; // для сайдбаров
$ui-index-5: 5; // для модальных окон
$ui-index-6: 6; // для элементов, перекрывающих все

/* ------------------- */

/* ---------- BREAKPOINTS ---------- */

$ui-media-retina: "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";

$ui-mobile: "screen and (max-width: 47.9625em)";
$ui-mobile-min: "screen and (min-width: 22.5em)";
$ui-mobile-interval: "(min-width: 22.5em) and (max-width: 47.9625em)";

$ui-tablet: "screen and (max-width: 63.9625em)";
$ui-tablet-min: "screen and (min-width: 48em)";
$ui-tablet-interval: "(min-width: 48em) and (max-width: 63.9625em)";

$ui-desktop: "screen and (max-width: 79.9625em)";
$ui-desktop-min: "screen and (min-width: 64em)";
$ui-desktop-interval: "(min-width: 64em) and (max-width: 79.9625em)";

$ui-desktop-lg-min: "screen and (min-width: 80em)";

/* --------------------------------- */

/* ---------- DEVICE DEFINITION --------- */

$ui-mouse-device: "(hover: hover) and (pointer: fine)";
$ui-touch-device: "(hover: none) and (pointer: coarse)";

/* -------------------------------------- */

/* ---------- Hover only for PC  ---------- */

.forexample {
    background-color: red;
    @media #{$ui-mouse-device} {
        &:hover {
            background-color: black;
        }
    }
}

/* ---------------------------------------- */

/* ---------- COLUMNS ---------- */

// $columns-count: 5;

// .col-1 {
//     /* 1/5 часть ширины экрана */
//     width: calc(100% / $columns-count * 1);
// }

/* ------------------------------ */

/* ---------- Variable font supports ---------- */
@mixin supportsVF($property-dec) {
    // find position of colon in property declaration
    $colon: str-index($property-dec, ":");
    // extract the property
    $property: str-slice($property-dec, 1, $colon - 1);
    // extract the value
    $value: str-slice($property-dec, $colon + 1);
    // trim leading spaces
    @while (str-slice($value, 1, 1) == " ") {
        $value: str-slice($value, 2);
    }
    // wrap the property declaration in parens
    $property-dec: "(" + $property-dec + ")";

    // output the ish
    @supports #{$property-dec} {
        #{$property}: #{$value};
        @content;
    }
}
/* -------------------------------------------- */

/** Px to rem function

@function rem($px, $default: 16) {
    @return calc(($px / $default) * 1rem);
}

- Use: rem(16)

*/
